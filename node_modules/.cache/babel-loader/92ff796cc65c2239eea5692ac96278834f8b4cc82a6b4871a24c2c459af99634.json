{"ast":null,"code":"import toast from \"react-hot-toast\";\nexport async function usernameValidate(values) {\n  const errors = usernameVerify({}, values);\n  return errors;\n}\nfunction usernameVerify(error = {}, values) {\n  if (!values.username) {\n    error.username = toast.error(\"Username is Required...!\");\n  } else if (values.username.includes(\"\")) {\n    error.username = toast.error(\"Username is Invalid...!\");\n  }\n  return error;\n}\nexport async function passwordValidate(values) {\n  const errors = passwordVerify({}, values);\n  return errors;\n}\nfunction passwordVerify(error = {}, values) {\n  const specialChars = /[`!@#$%^&*()_+\\-=\\[\\]{};:\"\\\\|,.<>\\/?~]/;\n  if (!values.password) {\n    error.password = toast.error(\"password is required!\");\n  } else if (values.password.includes(\" \")) {\n    error.password = toast.error(\"wrong password\");\n  } else if (values.password.length < 4) {\n    error.password = toast.error(\"password must be more than 4 characters\");\n  } else if (!specialChars.test(values.password)) {\n    error.password = toast.error(\"password must contain atleast one special character\");\n  }\n  return error;\n}\nexport async function resetPasswordValidate(values) {\n  const errors = passwordVerify({}, values);\n  if (values.password !== values.confirm_pwd) {\n    errors.exist = toast.error(\"password not match...!\");\n  }\n}","map":{"version":3,"names":["toast","usernameValidate","values","errors","usernameVerify","error","username","includes","passwordValidate","passwordVerify","specialChars","password","length","test","resetPasswordValidate","confirm_pwd","exist"],"sources":["C:/Users/pavan/OneDrive/Documents/jwt tokens/login_app/client/src/helper/Validate.js"],"sourcesContent":["\r\nimport toast from \"react-hot-toast\"\r\n\r\n\r\nexport async function usernameValidate(values){\r\n    const errors =  usernameVerify({}, values); \r\n    return errors; \r\n}\r\n\r\nfunction usernameVerify(error = {},values) {\r\n    if(!values.username){\r\n        error.username = toast.error(\"Username is Required...!\")\r\n    }else if(values.username.includes(\"\")) {\r\n        error.username = toast.error(\"Username is Invalid...!\")\r\n        }\r\n        return error; \r\n}\r\n\r\n\r\nexport async function passwordValidate(values) {\r\n    const errors = passwordVerify({}, values);\r\n    return errors ;\r\n}\r\n\r\n\r\nfunction passwordVerify(error = {}, values) {\r\n\r\n    const specialChars = /[`!@#$%^&*()_+\\-=\\[\\]{};:\"\\\\|,.<>\\/?~]/;\r\n\r\n    if(!values.password){\r\n        error.password = toast.error(\"password is required!\");\r\n    }else if(values.password.includes(\" \")) {\r\n        error.password = toast.error(\"wrong password\")\r\n    }else if (values.password.length < 4 ) {\r\n        error.password = toast.error (\"password must be more than 4 characters\")\r\n    }else if (!specialChars.test(values.password)){\r\n        error.password = toast.error(\"password must contain atleast one special character\")\r\n    }\r\n\r\n    return error;\r\n}\r\n\r\nexport async function resetPasswordValidate(values) {\r\n    const errors = passwordVerify({},values);\r\n\r\n    if(values.password !== values.confirm_pwd){\r\n        errors.exist = toast.error(\"password not match...!\")\r\n    }\r\n}\r\n\r\n"],"mappings":"AACA,OAAOA,KAAK,MAAM,iBAAiB;AAGnC,OAAO,eAAeC,gBAAgBA,CAACC,MAAM,EAAC;EAC1C,MAAMC,MAAM,GAAIC,cAAc,CAAC,CAAC,CAAC,EAAEF,MAAM,CAAC;EAC1C,OAAOC,MAAM;AACjB;AAEA,SAASC,cAAcA,CAACC,KAAK,GAAG,CAAC,CAAC,EAACH,MAAM,EAAE;EACvC,IAAG,CAACA,MAAM,CAACI,QAAQ,EAAC;IAChBD,KAAK,CAACC,QAAQ,GAAGN,KAAK,CAACK,KAAK,CAAC,0BAA0B,CAAC;EAC5D,CAAC,MAAK,IAAGH,MAAM,CAACI,QAAQ,CAACC,QAAQ,CAAC,EAAE,CAAC,EAAE;IACnCF,KAAK,CAACC,QAAQ,GAAGN,KAAK,CAACK,KAAK,CAAC,yBAAyB,CAAC;EACvD;EACA,OAAOA,KAAK;AACpB;AAGA,OAAO,eAAeG,gBAAgBA,CAACN,MAAM,EAAE;EAC3C,MAAMC,MAAM,GAAGM,cAAc,CAAC,CAAC,CAAC,EAAEP,MAAM,CAAC;EACzC,OAAOC,MAAM;AACjB;AAGA,SAASM,cAAcA,CAACJ,KAAK,GAAG,CAAC,CAAC,EAAEH,MAAM,EAAE;EAExC,MAAMQ,YAAY,GAAG,wCAAwC;EAE7D,IAAG,CAACR,MAAM,CAACS,QAAQ,EAAC;IAChBN,KAAK,CAACM,QAAQ,GAAGX,KAAK,CAACK,KAAK,CAAC,uBAAuB,CAAC;EACzD,CAAC,MAAK,IAAGH,MAAM,CAACS,QAAQ,CAACJ,QAAQ,CAAC,GAAG,CAAC,EAAE;IACpCF,KAAK,CAACM,QAAQ,GAAGX,KAAK,CAACK,KAAK,CAAC,gBAAgB,CAAC;EAClD,CAAC,MAAK,IAAIH,MAAM,CAACS,QAAQ,CAACC,MAAM,GAAG,CAAC,EAAG;IACnCP,KAAK,CAACM,QAAQ,GAAGX,KAAK,CAACK,KAAK,CAAE,yCAAyC,CAAC;EAC5E,CAAC,MAAK,IAAI,CAACK,YAAY,CAACG,IAAI,CAACX,MAAM,CAACS,QAAQ,CAAC,EAAC;IAC1CN,KAAK,CAACM,QAAQ,GAAGX,KAAK,CAACK,KAAK,CAAC,qDAAqD,CAAC;EACvF;EAEA,OAAOA,KAAK;AAChB;AAEA,OAAO,eAAeS,qBAAqBA,CAACZ,MAAM,EAAE;EAChD,MAAMC,MAAM,GAAGM,cAAc,CAAC,CAAC,CAAC,EAACP,MAAM,CAAC;EAExC,IAAGA,MAAM,CAACS,QAAQ,KAAKT,MAAM,CAACa,WAAW,EAAC;IACtCZ,MAAM,CAACa,KAAK,GAAGhB,KAAK,CAACK,KAAK,CAAC,wBAAwB,CAAC;EACxD;AACJ","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}